import React, { Component } from 'react'
import moment from 'moment'
import Table from 'antd/lib/table'
import Tag from 'antd/lib/tag'
import Spin from 'antd/lib/spin'

/*
  DEMO [ONLY]
*/

const FIRST_NAMES = 'Августа,Августина,Авдотья,Аврора,Агапия,Агата,Агафья,Аглая,Агния,Агунда,Ада,Аделаида,Аделина,Адель,Адиля,Адриана,Аза,Азалия,Азиза,Аида,Аиша,Айгерим,Айгуль,Айлин,Айнагуль,Айнур,Айсель,Айсун,Айсылу,Аксинья,Алёна,Алана,Алевтина,Александра,Алеста,Алина,Алиса,Алия,Алла,Алсу,Альба,Альбина,Альфия,Аля,Амалия,Амина,Амира,Анаит,Анастасия,Ангелина,Анжела,Анжелика,Анисья,Анна,Антонина,Анфиса,Аполлинария,Арабелла,Ариана,Арина,Асель,Асия,Астрид,Ася,Аэлита,Бажена,Беатрис,Бела,Белинда,Белла (Бэлла),Берта,Богдана,Божена,Валентина,Валерия,Ванда,Ванесса,Варвара,Василина,Василиса,Венера,Вера,Вероника,Веста,Вета,Викторина,Виктория,Вилена,Виола,Виолетта,Вита,Виталина (Виталия),Влада,Владана,Владислава,Габриэлла,Галина,Галия,Генриетта,Гоар,Грета,Гульзира,Гульмира,Гульназ,Гульнара,Гульшат,Гюзель,Далида,Дамира,Дана,Даниэла,Дания,Дара,Дарина,Дарья,Даяна,Джамиля,Дженна,Дженнифер,Джессика,Джиневра,Диана,Дильназ,Дильнара,Диля,Дилярам,Дина,Динара,Долорес,Доминика,Домна,Домника,Ева,Евангелина,Евгения,Евдокия,Екатерина,Елена,Елизавета,Есения,Жаклин,Жанна,Жансая,Жасмин,Жозефина,Жоржина,Забава,Заира,Залина,Замира,Зара,Зарема,Зарина,Земфира,Зинаида,Зита,Злата,Златослава,Зоряна,Зоя,Зульфия,Зухра,Иветта (Ивета),Изабелла,Иллирика,Илона,Ильзира,Илюза,Инга,Индира,Инесса,Инна,Иоанна,Ира,Ирада,Ираида,Ирина,Ирма,Искра,Ия,Камила,Камилла,Кара,Карина,Каролина,Кира,Клавдия,Клара,Кора,Корнелия,Кристина,Ксения,Лада,Лана,Лара,Лариса,Лаура,Лейла,Леона,Лера,Леся,Лиана,Лидия,Лика,Лили,Лилиана,Лилия,Лина,Линда,Лиора,Лира,Лия,Лола,Лолита,Лора,Луиза,Лукерья,Лукия,Любава,Любовь,Людмила,Люсиль,Люсьена,Люция,Люче,Ляйсан,Ляля,Мавиле,Мавлюда,Магда,Магдалeна,Мадина,Мадлен,Майя,Макария,Малика,Мара,Маргарита,Марианна,Марика,Марина,Мария,Мариям,Марта,Марфа,Мелания,Мелисса,Мика,Мила,Милада,Милана,Милен,Милена,Милица,Милослава,Мира,Мирослава,Мирра,Мия,Моника,Муза,Надежда,Наиля,Наима,Нана,Наоми,Наргиза,Наталья,Нелли,Нея,Ника,Николь,Нина,Нинель,Номина,Нора,Нурия,Одетта,Оксана,Октябрина,Олеся,Оливия,Ольга,Офелия,Павлина,Памела,Патриция,Паула,Пейтон,Пелагея,Перизат,Платонида,Полина,Прасковья,Рада,Разина,Раиса,Рамина,Регина,Резеда,Рена,Рената,Риана,Рианна,Рикарда,Римма,Рина,Рита,Рогнеда,Роза,Рузалия,Рузанна,Русалина,Руслана,Руфина,Руфь,Сабина,Сабрина,Сажида,Саида,Самира,Сандра,Сания,Сара,Сати,Сафия,Сафура,Светлана,Севара,Серафима,Сильвия,Снежана,Соня,Софья,Стелла,Стефания,Сусанна,Таисия,Тамара,Тамила,Тара,Татьяна,Таяна,Теона,Тереза,Тина,Томирис,Тора,Ульяна,Урсула,Устинья,Фёкла,Фазиля,Фаина,Фарида,Фариза,Фатима,Феруза,Фируза,Флора,Флорентина,Флоренция (Флоренс),Флориана,Фредерика,Фрида,Хадия,Хилари,Хлоя,Цагана,Цветана,Цецилия (Сесилия),Циара (Сиара),Челси,Чеслава,Чулпан,Шакира,Шарлотта,Шахина,Шейла,Шелли,Шерил,Эвелина,Эвита,Элеонора,Элиана,Элиза,Элина,Элла,Эльвина,Эльвира,Эльмира,Эльнара,Эля,Эмили,Эмилия,Эмма,Энже,Эрика,Эрмина,Эсмеральда,Эсмира,Этель,Этери,Юлианна,Юлия,Юна,Юния,Юнона,Ядвига,Яна,Янина,Ярина,Ярослава,Ясмина'.split(',')

const LAST_NAMES = 'Абрамов,Авдеев,Агафонов,Аксёнов,Александров,Алексеев,Андреев,Анисимов,Антонов,Артемьев,Архипов,Афанасьев,Баранов,Белов,Белозёров,Белоусов,Беляев,Беляков,Беспалов,Бирюков,Блинов,Блохин,Бобров,Бобылёв,Богданов,Большаков,Борисов,Брагин,Буров,,Быков,Васильев,Веселов,Виноградов,Вишняков,Владимиров,Власов,Волков,Воробьёв,Воронов,Воронцов,Гаврилов,Галкин,Герасимов,Голубев,Горбачёв,Горбунов,Гордеев,Горшков,Григорьев,Гришин,Громов,Гуляев,Гурьев,Гусев,Гущин,Давыдов,Данилов,Дементьев,Денисов,Дмитриев,Доронин,Дорофеев,Дроздов,Дьячков,Евдокимов,Евсеев,Егоров,Елисеев,Емельянов,Ермаков,Ершов,Ефимов,Ефремов,Жданов,Жуков,Журавлёв,Зайцев,Захаров,Зимин,Зиновьев,Зуев,Зыков,Иванков,Иванов,Игнатов,Игнатьев,Ильин,Исаев,Исаков,Кабанов,Казаков,Калашников,Калинин,Капустин,Карпов,Кириллов,Киселёв,Князев,Ковалёв,Козлов,Колесников,Колобов,Комаров,Комиссаров,Кондратьев,Коновалов,Кононов,Константинов,Копылов,Корнилов,Королёв,Костин,Котов,Кошелев,Красильников,Крылов,Крюков,Кудрявцев,Кудряшов,Кузнецов,Кузьмин,Кулагин,Кулаков,Куликов,Лаврентьев,Лазарев,Лапин,Ларионов,Лебедев,Лихачёв,Лобанов,Логинов,Лукин,Лыткин,Макаров,Максимов,Мамонтов,Марков,Мартынов,Маслов,Матвеев,Медведев,Мельников,Меркушев,Миронов,Михайлов,Михеев,Мишин,Моисеев,Молчанов,Морозов,Муравьёв,Мухин,Мышкин,Мясников,Назаров,Наумов,Некрасов,Нестеров,Никитин,Никифоров,Николаев,Никонов,Новиков,Носков,Носов,Овчинников,Одинцов,Орехов,Орлов,Осипов,Павлов,Панов,Панфилов,Пахомов,Пестов,Петров,Петухов,Поляков,Пономарёв,Попов,Потапов,Прохоров,Рогов,Родионов,Рожков,Романов,Русаков,Рыбаков,Рябов,Савельев,Савин,Сазонов,Самойлов,Самсонов,Сафонов,Селезнёв,Селиверстов,Семёнов,Сергеев,Сидоров,Силин,Симонов,Ситников,Соболев,Соколов,Соловьёв,Сорокин,Степанов,Стрелков,Субботин,Суворов,Суханов,Сысоев,Тарасов,Терентьев,Тетерин,Тимофеев,Титов,Тихонов,Третьяков,Трофимов,Туров,Уваров,Устинов,Фадеев,Фёдоров,Федосеев,Федотов,Филатов,Филиппов,Фокин,Фомин,Фомичёв,Фролов,Харитонов,Хохлов,Цветков,Чернов,Шарапов,Шаров,Шашков,Шестаков,Шилов,Ширяев,Шубин,Щербаков,Щукин,Юдин'.split(',')

const TAGS = [
  'уничтожающий',
  'фанатический',
  'фундаментальный',
  'хороший',
  'царский',
  'щемящий',
  'экстраординарный',
  'экстремальный',
  'ювелирный',
  'ядреный',
  'яркий'
]

const getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min
const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms))

/*
  END DEMO [ONLY]
*/

export default class App extends Component {
  state = {
    items: [],
    loading: false
  }

  async componentWillMount () {
    this.setState({ loading: true })

    const items = []

    for (let i = 0, j = getRandomInt(100, 250); i < j; i++) {
      const tags = []
      const date = new Date()

      for (let i = 0, j = getRandomInt(1, 4); i < j; i++) {
        tags.push(TAGS[getRandomInt(0, TAGS.length - 1)])
      }

      date.setDate(getRandomInt(1, 30))
      date.setMonth(getRandomInt(0, 11))
      date.setMinutes(getRandomInt(1, 59))
      date.setHours(getRandomInt(1, 23))

      items.push({
        user_id: 1,
        store_id: 1,
        first_name: FIRST_NAMES[getRandomInt(0, FIRST_NAMES.length - 1)],
        last_name: LAST_NAMES[getRandomInt(0, LAST_NAMES.length - 1)],
        rating: getRandomInt(1, 5),
        tags,
        timestamp: date.getTime() / 1000
      })
    }

    this.setState({ items, loading: false })
  }

  render () {
    const { items, loading } = this.state

    if (loading) {
      return (
        <div
          style={{
            height: '100vh',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center'
          }}
        >
          <Spin />
        </div>
      )
    }

    const columns = [{
      title: 'Сотрудник',
      dataIndex: 'name',
      key: 'name',
      filters: items.map(({ first_name, last_name }) => ({
        text: `${first_name} ${last_name || ''}`,
        value: `${first_name} ${last_name || ''}`
      })),
      onFilter: (value, { name }) => name === value
    }, {
      title: 'Время',
      dataIndex: 'timestamp',
      key: 'timestamp',
      filters: items
        .map(({ timestamp }) => moment.unix(timestamp).format('DD.MM.YYYY'))
        .filter((item, index, array) => array.indexOf(item) === index)
        .map((item) => ({ text: item, value: item })),
      onFilter: (value, { timestamp }) => moment.unix(timestamp).format('DD.MM.YYYY') === value,
      sorter: (a, b) => b.timestamp - a.timestamp,
      render: (timestamp) => moment.unix(timestamp).format('DD.MM.YYYY (HH:mm)')
    }, {
      title: 'Оценка',
      dataIndex: 'stars',
      key: 'stars',
      filters: items
        .sort((a, b) => a.rating - b.rating)
        .map(({ rating }) => Array(rating + 1).join('★'))
        .filter((item, index, array) => array.indexOf(item) === index)
        .map((item) => ({
          text: item,
          value: item
        })),
      onFilter: (value, { stars }) => stars === value.length,
      sorter: (a, b) => b.stars - a.stars,
      render: (stars) => Array(stars + 1).join('★')
    }, {
      title: 'Преимущества/недостатки',
      dataIndex: 'tags',
      key: 'tags',
      filters: items
        .map(({ tags }) => tags)
        .reduce((a, b) => [ ...a, ...b ], [])
        .filter((item, index, array) => array.indexOf(item) === index)
        .map((tag) => ({
          text: tag,
          value: tag
        })),
      onFilter: (value, { tags: { tags } }) => tags.indexOf(value) !== -1,
      sorter: (a, b) => b.tags.tags.length - a.tags.tags.length,
      render: ({ tags, stars }) => tags.map((tag, i) => <Tag style={{ margin: 3 }} color={stars > 3 ? 'green' : 'red'} key={i}>{tag}</Tag>)
    }]

    return (
      <Table
        dataSource={
          items.map(({ first_name, last_name, tags, rating: stars, ...item }, key) => {
            return {
              ...item,
              key,
              stars,
              name: `${first_name} ${last_name || ''}`,
              tags: { tags, stars }
            }
          })
        }
        locale={{
          filterConfirm: 'ОК',
          filterReset: 'отменить',
          emptyText: 'Не найдено'
        }}
        columns={columns}
        pagination={false}
      />
    )
  }
}
